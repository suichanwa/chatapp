var y=Object.defineProperty;var C=Object.getPrototypeOf;var M=Reflect.get;var L=(i,r,e)=>r in i?y(i,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[r]=e;var m=(i,r,e)=>L(i,typeof r!="symbol"?r+"":r,e);var u=(i,r,e)=>M(C(i),e,r);var n=(i,r,e)=>new Promise((t,s)=>{var o=c=>{try{d(e.next(c))}catch(l){s(l)}},a=c=>{try{d(e.throw(c))}catch(l){s(l)}},d=c=>c.done?t(c.value):Promise.resolve(c.value).then(o,a);d((e=e.apply(i,r)).next())});import{_ as E}from"./mobile-index-Pt_dPi8B.js";import{C as T,I as k,S as P}from"./ChatApp-BQePORvA.js";var v=(i=>(i.Uri="uri",i.Base64="base64",i.DataUrl="dataUrl",i))(v||{}),f=(i=>(i.Prompt="PROMPT",i.Camera="CAMERA",i.Photos="PHOTOS",i))(f||{});const S={getPhoto(i){return n(this,null,function*(){throw console.log("Mock Camera.getPhoto called with options:",i),new Error("Camera not available in development mode")})},requestPermissions(){return n(this,null,function*(){return console.log("Mock Camera.requestPermissions called"),{camera:"granted",photos:"granted"}})}};let h=S,g=v,p=f;class b extends T{constructor(){super();m(this,"imageProcessor");m(this,"savedMessagesManager");m(this,"capacitorLoaded",!1);console.log("📱 MobileChatApp initialized"),this.imageProcessor=new k,this.savedMessagesManager=new P,this.components.set("imageProcessor",this.imageProcessor),this.components.set("savedMessagesManager",this.savedMessagesManager)}initialize(){return n(this,null,function*(){console.log("📱 MobileChatApp: Starting mobile initialization..."),yield this.loadCapacitorDependencies(),this.setupMobileEnvironment(),yield u(b.prototype,this,"initialize").call(this),yield this.setupMobileFeatures()})}loadCapacitorDependencies(){return n(this,null,function*(){try{const e=this.isCapacitorEnvironment();if(e)try{const t=yield E(()=>import("@capacitor/camera"),[],import.meta.url).catch(()=>null);t?(h=t.Camera,g=t.CameraResultType,p=t.CameraSource,console.log("📱 Real Capacitor Camera loaded")):console.log("📱 Capacitor Camera module not available, using fallback")}catch(t){console.log("📱 Failed to load real Capacitor Camera, using fallback")}this.capacitorLoaded=e,console.log("📱 Capacitor dependencies setup complete")}catch(e){console.log("📱 Failed to setup Capacitor dependencies, using fallbacks"),this.capacitorLoaded=!1}})}setupMobileEnvironment(){document.body.classList.add("mobile-app");const e=document.querySelector('meta[name="viewport"]');if(e)e.setAttribute("content","width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover");else{const s=document.createElement("meta");s.name="viewport",s.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover",document.head.appendChild(s)}this.hasNotch()&&document.body.classList.add("has-notch");const t=document.createElement("meta");t.name="theme-color",t.content="#1a1a1a",document.head.appendChild(t)}setupMobileFeatures(){return n(this,null,function*(){yield this.requestMobilePermissions(),yield this.setupMobileNetworking(),this.setupTouchHandlers(),this.setupMobileLifecycle(),yield this.setupMobileCamera(),this.setupMobileFileSharing()})}requestMobilePermissions(){return n(this,null,function*(){try{if("Notification"in window){const e=yield Notification.requestPermission();console.log("📱 Notification permission:",e)}if("wakeLock"in navigator)try{yield navigator.wakeLock.request("screen"),console.log("📱 Wake lock acquired")}catch(e){console.log("📱 Wake lock request failed:",e)}if(this.isCapacitorEnvironment())try{yield h.requestPermissions(),console.log("📱 Camera permissions granted")}catch(e){console.log("📱 Camera permissions failed:",e)}}catch(e){console.log("📱 Mobile permissions setup failed:",e)}})}setupMobileNetworking(){return n(this,null,function*(){console.log("📱 Setting up mobile networking (WebRTC mode)");const e=this.isCapacitorEnvironment();console.log(e?"📱 Running in native Capacitor environment":"📱 Running in mobile web browser")})}setupTouchHandlers(){let e=0,t=0;document.addEventListener("touchstart",o=>{e=o.touches[0].clientY,t=o.touches[0].clientX},{passive:!0}),document.addEventListener("touchmove",o=>{const a=o.touches[0].clientY,d=o.touches[0].clientX,c=e-a,l=t-d,w=document.querySelector(".messages");w&&c<0&&w.scrollTop===0&&o.preventDefault(),Math.abs(l)>Math.abs(c)&&Math.abs(l)>50&&(l>0?this.handleSwipeLeft():this.handleSwipeRight())},{passive:!1});let s=0;document.addEventListener("touchend",o=>{const a=Date.now();a-s<=300&&o.preventDefault(),s=a},!1),this.setupLongPressHandlers()}setupLongPressHandlers(){let e;document.addEventListener("touchstart",t=>{const s=t.target;s.closest(".message")&&(e=setTimeout(()=>{this.showMessageOptions(s.closest(".message"))},500))}),document.addEventListener("touchend",()=>{clearTimeout(e)}),document.addEventListener("touchmove",()=>{clearTimeout(e)})}showMessageOptions(e){const t=e.dataset.messageId;if(!t)return;const s=navigator;s.vibrate&&s.vibrate(50);const o=document.createElement("div");o.className="mobile-message-menu",o.innerHTML=`
      <div class="mobile-menu-backdrop"></div>
      <div class="mobile-menu-content">
        <div class="mobile-menu-header">Message Options</div>
        <button class="mobile-menu-item" data-action="save">💾 Save Message</button>
        <button class="mobile-menu-item" data-action="copy">📋 Copy Text</button>
        <button class="mobile-menu-item" data-action="forward">↗️ Forward</button>
        <button class="mobile-menu-item cancel">❌ Cancel</button>
      </div>
    `,document.body.appendChild(o),o.classList.add("show"),o.addEventListener("click",a=>n(this,null,function*(){const c=a.target.dataset.action;c==="save"?yield this.saveMessage(t):c==="copy"?yield this.copyMessageText(t):c==="forward"&&this.showForwardDialog(t),o.remove()}))}copyMessageText(e){return n(this,null,function*(){try{if(!this.currentChatId)return;const s=(yield window.electronAPI.db.getMessages(this.currentChatId)).find(o=>o.id===e);s&&navigator.clipboard&&(yield navigator.clipboard.writeText(s.content),this.showToast("📋 Message copied to clipboard"))}catch(t){console.error("Failed to copy message:",t),this.showToast("❌ Failed to copy message")}})}showForwardDialog(e){console.log("Forward message:",e),this.showToast("🚧 Forward feature coming soon")}showToast(e){const t=document.createElement("div");t.className="mobile-toast",t.textContent=e,document.body.appendChild(t),setTimeout(()=>t.classList.add("show"),100),setTimeout(()=>{t.classList.remove("show"),setTimeout(()=>t.remove(),300)},2e3)}handleSwipeLeft(){const e=document.querySelector(".chat-list");e&&e.classList.add("mobile-visible")}handleSwipeRight(){const e=document.querySelector(".chat-list");e&&e.classList.remove("mobile-visible")}setupMobileCamera(){return n(this,null,function*(){document.addEventListener("click",e=>n(this,null,function*(){const t=e.target;(t.id==="image-btn"||t.closest("#image-btn"))&&(e.preventDefault(),yield this.showMobileCameraOptions())}))})}showMobileCameraOptions(){return n(this,null,function*(){if(!this.isCapacitorEnvironment()){const t=document.getElementById("image-input");t==null||t.click();return}const e=document.createElement("div");e.className="mobile-camera-options",e.innerHTML=`
      <div class="mobile-menu-backdrop"></div>
      <div class="mobile-menu-content">
        <div class="mobile-menu-header">Add Photo</div>
        <button class="mobile-menu-item" data-action="camera">📷 Take Photo</button>
        <button class="mobile-menu-item" data-action="gallery">🖼️ Choose from Gallery</button>
        <button class="mobile-menu-item cancel">❌ Cancel</button>
      </div>
    `,document.body.appendChild(e),e.classList.add("show"),e.addEventListener("click",t=>n(this,null,function*(){const o=t.target.dataset.action;o==="camera"?yield this.takeCameraPhoto():o==="gallery"&&(yield this.chooseFromGallery()),e.remove()}))})}takeCameraPhoto(){return n(this,null,function*(){try{const e=yield h.getPhoto({quality:80,allowEditing:!1,resultType:g.DataUrl,source:p.Camera});e.dataUrl&&(yield this.processAndSendImage(e.dataUrl))}catch(e){console.error("Camera error:",e),this.showToast("❌ Camera access failed")}})}chooseFromGallery(){return n(this,null,function*(){try{const e=yield h.getPhoto({quality:80,allowEditing:!1,resultType:g.DataUrl,source:p.Photos});e.dataUrl&&(yield this.processAndSendImage(e.dataUrl))}catch(e){console.error("Gallery error:",e),this.showToast("❌ Gallery access failed")}})}processAndSendImage(e){return n(this,null,function*(){if(!this.currentChatId){this.showToast("❌ No chat selected");return}try{const s=yield(yield fetch(e)).blob(),o=new File([s],"mobile-photo.jpg",{type:"image/jpeg"});yield this.components.get("messages").sendImageMessage(this.currentChatId,o),this.showToast("📷 Photo sent!")}catch(t){console.error("Failed to send image:",t),this.showToast("❌ Failed to send photo")}})}setupMobileFileSharing(){document.addEventListener("DOMContentLoaded",()=>{this.handleSharedFiles()})}handleSharedFiles(){return n(this,null,function*(){if(this.isCapacitorEnvironment())try{console.log("📱 Checking for shared files...")}catch(e){console.log("📱 No shared files found")}})}setupMobileLifecycle(){document.addEventListener("visibilitychange",()=>{document.hidden?(console.log("📱 App went to background"),this.pauseMobileFeatures()):(console.log("📱 App came to foreground"),this.resumeMobileFeatures())}),window.addEventListener("orientationchange",()=>{setTimeout(()=>{this.handleOrientationChange()},100)}),window.addEventListener("online",()=>{console.log("📱 Device came online"),this.showToast("🌐 Connected to internet")}),window.addEventListener("offline",()=>{console.log("📱 Device went offline"),this.showToast("📴 No internet connection")})}pauseMobileFeatures(){console.log("📱 Pausing mobile features...")}resumeMobileFeatures(){console.log("📱 Resuming mobile features...")}handleOrientationChange(){console.log("📱 Orientation changed"),this.refreshChatList(),this.currentChatId&&this.refreshMessages(),setTimeout(()=>{this.adaptUIForMobile()},200)}hasNotch(){return/iPhone/.test(navigator.userAgent)&&window.screen.height>=812&&window.devicePixelRatio>=2}isCapacitorEnvironment(){var e;return!!((e=window.Capacitor)!=null&&e.isNative)}setupUI(){return n(this,null,function*(){yield u(b.prototype,this,"setupUI").call(this),this.adaptUIForMobile(),this.addMobileUIElements()})}addMobileUIElements(){var t,s,o;const e=document.getElementById("app");if(e){const a=document.createElement("div");a.className="mobile-nav",a.innerHTML=`
        <button class="mobile-nav-btn" id="mobile-chat-list-btn">💬</button>
        <button class="mobile-nav-btn" id="mobile-saved-btn">💾</button>
        <button class="mobile-nav-btn" id="mobile-settings-btn">⚙️</button>
      `,e.appendChild(a),(t=document.getElementById("mobile-chat-list-btn"))==null||t.addEventListener("click",()=>{this.toggleMobileChatList()}),(s=document.getElementById("mobile-saved-btn"))==null||s.addEventListener("click",()=>{this.eventBus.emit("saved-messages:show")}),(o=document.getElementById("mobile-settings-btn"))==null||o.addEventListener("click",()=>{this.showMobileSettings()})}}toggleMobileChatList(){const e=document.querySelector(".chat-list");e&&e.classList.toggle("mobile-visible")}showMobileSettings(){this.showToast("⚙️ Settings coming soon")}adaptUIForMobile(){document.querySelectorAll("button").forEach(a=>{a.style.minHeight="44px",a.style.minWidth="44px",a.style.fontSize="16px"}),document.querySelectorAll("input").forEach(a=>{a.style.fontSize="16px"});const s=document.getElementById("app");s&&s.classList.add("mobile-layout");const o=document.getElementById("message-input");o&&o.addEventListener("focus",()=>{setTimeout(()=>{const a=document.querySelector(".messages");a&&(a.scrollTop=a.scrollHeight)},300)})}}export{b as MobileChatApp};
